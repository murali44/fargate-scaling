Resources:
  FargateScalingRole:
      Properties:
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole #communicate with resources within a vpc
        AssumeRolePolicyDocument:
          Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
          Version: '2012-10-17'
        Path: /
        Policies:
        - PolicyDocument:
            Statement:
            - Action:
                - iam:PassRole
              Effect: Allow
              Resource:
                - !GetAtt ExecutionRole.Arn
                - !GetAtt TaskRole.Arn
            - Action:
              - ecs:ListTasks
              - ecs:RunTask
              Effect: Allow
              Resource: "*"
            - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:CreateLogGroup
              Effect: Allow
              Resource:
                - 'Fn::Join':
                  - ':'
                  -
                    - 'arn:aws:logs'
                    - Ref: 'AWS::Region'
                    - Ref: 'AWS::AccountId'
                    - 'log-group:/aws/lambda/${self:custom.stage}-FargateScaling:*'
            Version: '2012-10-17'
          PolicyName: ${self:custom.stage}-FargateScaling-GeneratedRoles
        RoleName: ${self:custom.stage}-FargateScaling
      Type: AWS::IAM::Role
